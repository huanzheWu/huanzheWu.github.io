---
layout: post
title: 《TCP/IP详解》学习笔记
category: 读书
tags: 学习笔记
description: 
---

#第一章 概述
###分层
TCP/IP协议分为四层：链路层、网络层、运输层、应用层。每一层各有不同责任，在TCP/IP中，网络层与运输层的区别：**网络层（IP）提供点到点的服务，而运输层（TCP和UDP）提供端到端的服务**。
###互联网地址
互联网上每个接口必须有一个唯一的Internet地址，称为IP地址，IP地址长32bit。IP地址具有一定的结构，5类不同的互联网地址格式。这32bit地址写成四个十进制的数。区分各类地址可以通过一个数的范围来判断。多接口主机具有多个IP地址，其中每个接口都对应一个IP地址。
###域名系统
域名系统是一个分布式的数据库，它提供了IP地址和主机名之间的映射信息。通过IP地址可以访问主机上的网络接口，进而访问主机，但是人们更喜欢用主机名来访问主机上的网络接口。
###封装
当应用程序用TCP传送数据时，数据被送入协议栈中。数据经过四层最终成为一串比特流送入网络，该比特流称为帧。每一层都对数据添加了首部信息，有时还要增加尾部信息。
###分用
分用就是封装的逆过程。当目的主机收到一个以太网数据帧时，数据就从协议栈中由底向上升，过程中去掉各层协议加上的报文首部。
###客户-服务器模型
使用该模型的目的：让服务器为客户提供一些特定服务。这种服务可以分两种类型：
- 重复型：服务器一个时间段内只能为一个客户机提供服务（UDP服务器）
- 并发型：每个客户都有其对应的服务器。（TCP服务器）

###端口号
TCP与UDP通过16bit的端口号来识别应用程序。
而服务器一般都是通过知名端口号来识别的，范围1~1023。客户端的端口号是临时的，范围可以是1024~5000。而unix还有保留端口号的概念。
###应用程序接口
使用TCP/IP协议的应用程序通常采用两种应用编程接口：socket与TLI（运输层接口）。
###RFC
所有关于Internet的正式标准都以RFC文档出版。
#第二章 链路层
在TCP/UP协议族中，链路层主要有三个目的：

- 为IP模块发送和接收IP数据报。
- 为ARP模块发送ARP请求和接收ARP应答。
- 为RARP发送RARP请求和接收RARP应答。


数据链路层的协议很多，包括以太网、令牌环网、FDDI（光纤分布式数据接口）及RS-232串行等。

###以太网与IEEE 802的封装
以太网一般指数字设备公司、英特尔公司和Xerox公司在1982年联合发布的一个标准。

在TCP/TP世界中，以太网IP数据报是在RFC894中定义的，而IEEE 802 网络的IP数据报封装是在RFC 1024中定义的。主机需求RFC要求每台Internet主机都与一个10Mb/s的以太网电缆相连接：

1. 必须能发送和接收采用RFC 894封装格式的分组。
2. 应该能接受与RFC894混合的RFC1024封装格式的分组。
3. 也许能够发送RFC1024格式封装的分组。

###SLIP：串行线路IP
SLIP是一种简单的**帧封装的方法**，它所定义的帧格式规则如下：

1. IP数据报以一个称为END的（0xc0）的特殊字符开始与结束。
2. 如果IP报文中的某个字符为END，那么要连续输入两个字节0xdb和0xdc来取代它，0xdb称为SLIP的ESC字符。
3. 如果IP报文中某个字符为SLIP的ecs字符，则要使用两个字节oxdb和oxdd来取代它。

由于简单，SLIP存在如下缺陷：

1. 每一端必须知道对方的IP地址，没有办法把本端地址通知另一端。
2. 数据帧中没有类型字段，在以太网封装中，类型字段定义了后续数据的类型。
3. SLIP没有在数据帧中加上检验和，依赖于上层提供某种形式的CRC。



由于串行线路的速率通常较低，且通信通常是交互式，因此在SLIP线路上有许多小的TCP分组进行交换，而SLIP为了传送一个字节的数据，需要20个字节的IP首部和20个字节的TCP首部，总数超过40个字节，性能堪忧，故提出了**CSLIP，即压缩式SLIP**，可以把40个字节压缩至3~5字节。
###PPP：点对点协议

PPP对SLIP的所有缺点进行了改进。与SLIP一样，PPP经常用于低速的串行线路，与SLIP相比，PPP的优点在于：


1. 它支持在一根串行线上运行多种协议，不只是IP协议。
2. 每一帧都带有循环冗余检验。
3. 同行双方可以进行IP地址的动态协商。
4. 与CSLIP相似，对TCP与IP报文首部进行了压缩。
5. 链路控制协议可以对多个链路选项进行设置。

拓展：何为点对点链路？

###环回接口
环回接口允许运行在用一台主机上的客户程序和服务器程序通过TCP/IP进行通信。IP 127.0.0.1分配给这个接口。应该注意一下几点:

1. 传给环回地址（一般是127.0.0.1）的任何数据均作为IP输入。
2. 传给广播地址或多播地址的数据报复制一份传给环回接口，然后送到以太网上。这是 因为广播传送和多播传送的定义包含主机本身。 
3. 任何传给该主机IP地址的数据均送到环回接口。 

###最大传输单元 MTU
数据帧的长度是有一定限制的，如以太网是1500，802.3是1492，这个限制值如何计算在后续介绍。点到点的链路层（如SLIP与PPP）MTU并不是物理限制，而是逻辑限制，目的是为了交换使用提供足够快的响应时间。
###路径MTU
两台通信主机间最小的MTU。根据典型的串行线路的MTU，书本中对SLIP与CSLIP链路对传输延时进行了计算。
#第三章 IP：网际协议
IP是TCP/IP协议族中最为核心对一个协议，它提供不可靠/无连接对数据报传送服务。它对错误处理对方法是舍弃数据报然后发送ICMP消息给信源端。它对可靠性依赖于上层对可靠性，如TCP。而无连接指明IP不维护任何关于后续数据报对状态信息，每个数据报对处理都是相互独立的。
###IP首部
IP首部中含有：

- 协议版本号
- 首部长度，指首部占32bit字的数目
- 服务类型，它包括3bit的优先权（先已经被忽略），4bit的TOS（服务类型），这4bit中只能置一位为1，表示某服务，如果四位全为0，表示一般服务。4bit的服务类型分别：**最小延迟、最大吞吐量、最高可靠性、最小费用**。交互应用要求最小时延，文件传输要求最大最大吞吐量。路由选择协议要求最高可靠性，而用户网络新闻是唯一要求最小费用的应用。不过现在大多数的TCPIP实现都不支持TOS特性，
- 总长度。这是IP首部中的**必要内容**，在链路层对数据报的最小长度有要求，需要根据这个总长度来填充。 总长度指IP数据报的长度，这一段为16bit，也就是说IP数据报的最大长度为65535，可以回想起超级通道MTU为65535.不过一般数据报没这么长，太长的TCP会对其进行分片。
- 标识字段。唯一地标识了主机发送的每一分数据报。通常发送一份报文它的值就会加1.
- TTL，生存时间字段，设置了数据报可以经过的最多路由数。
- 协议字段。
- 首部检验和字段。在**我的理解**下，在发送该IP报文前，该字段填充的是IP首部中除了首部检验字段的每个16bit的二进制之和的反码。而接受方在接受到该数据报后，同样对IP首都字段（这次包括首部检验字段）进行每个16bit的二进制求和，如何传输正确的话，求和的结果应该全是1.如果不是全是1则表示错误。此时IP将丢弃数据报，由上层发现数据报丢失而重新传送。
- 任选项。为数据报中一个可变长的可选信息。

###IP路由选择

什么是IP路由选择：我的理解是IP数据报从源发送端到目的主机端口过程中，对路由器传输线路的一个选择策略。

大多数主机都采取了下面这种简单策略：

- 如果是点对点链路或者在一个共享网络上（以太网或令牌环网），则IP数据报直接从源主机发送至目的主机。
- 否则，数据报将被发送到一个默认的路由器上。由路由器进行数据报转发。

IP层既可以配置成路由器的功能，也可以配置成主机功能。当IP层接受到从网络接口来的数据报时，如果IP层设置成路由器功能，那么就要对数据报进行转发，否则丢弃数据报。不过在转发之前，IP首先得检验目的IP地址是不是本机的IP地址之一或者IP广播地址，如果是，数据报就被送到了IP首部中指定的的协议模块进行处理。IP层在内存中有一个路由表，在对数据报进行发送时要搜索该表。主机也可以配置成路由器，不过它从不把数据从一个接口转发到另一个接口（***那还有什么意义？路由器不就是能转发数据报吗？难道还有其他功能？***）。

路由表中每一项含有：

- 目的IP地址，可以是主机地址或者是网络地址。
- 下一站路由器的IP地址，或者有直接相连的网络地址。
- 标志。表面了目的IP地址是主机地址还是网络地址。
- 为数据报的传输指定一个网络接口。

那么，IP路由选择完成了什么功能呢？

1. 搜索路由表，寻找与目的IP完全匹配的IP地址，网络号和主机号都要完全匹配。如果找到了则把数据报发送给该条目指定的下一个路由器。
2. 搜索路由表，寻找与目的IP匹配的网络号。（***这是否是第一条没达到的处理？***）
3. 搜索路由表，寻找标为“默认”的表目。

如果这些步骤都没成功则不能发送数据报。

另外，IP路由选择的一个特性是为一个网络指定一个路由器而不是为一个主机指定一个路由器。这可以极大缩小路由表的规模。

###子网掩码

子网掩码用于确定IP地址中多少位属于子网号，多少位属于主机号。

```bash
网络上，数据从一个地方传到另外一个地方，是依靠 IP 寻址。
从逻辑上来讲，是两步的。
第一步，从 IP 中找到所属的网络，好比是去找这个人是哪个小区的；
第二布，再从 IP 中找到主机在这个网络中的位置，好比是在小区里面找到这个人。

第一步中的网络，就称之为「子网」（Subnet）。
从逻辑上来讲，一般同一子网（Subnet）是使用相同的网关。就好比，一个小区的入口。

IPv4 的 IP 地址是 32 位的，形式如 http://xxx.xxx.xxx.xxx，每一个 xxx 取值都是 0 - 255。
到底是前三个 xxx 相同，就代表同一个子网，还是前两个，还是其他？这个并不一定。
就好比小区有大有小，有的小区有上千户人家，有的小区只有区区几个。
所以，就引入「子网掩码」（Subnet Mask）来标识该子网的大小。

我们一般看到的 IP 地址是十进制的编码，所以如果换一个视角，从二进制的角度看，每一个 IP 地址就是 32 位 1 或 0。
子网掩码，就是用来告诉这个子网的覆盖区间。这 32 位中，前多少位是网络段？当然，余下的就是主机段。

举典型的例子：
IP 中前 24 位代表子网号，后 8 位代表主机号。
所以子网掩码就是 24 个 1（代表前 24 位是子网部分），加 8 个 0（后 8 位是主机部分）。
如果沿用 IP 的标识方式，就是 255.255.255.0 。
每一个 255 对应 8 个二进制 1，最后一个 0 对应 8 个二进制 0。
该子网可以容纳最多 256 台主机，也就是主机号从 0 到 255。
当然，实际情况没有这么多，有一些特殊数字有保留用处（广播、网关等）。 
```
####问题：子网号为16bit的A类地址与子网号为8bit的B类地址有什么不同？

都是255.255.255.0，对于A类地址来说，它把主机号中的16bit划为子网号，加上前面的网络号，一共是24bit；对于B类地址来说，它把主机号中的8bit划分为子网号，加上前面14+2bit网络号同样为24bit。尽管子网掩码相同，但子网的个数却不相同。可以看下面这张图配合理解：


*<center><img src="/public/img/229.png" style="width:50%"></center>*

#第四章 ARP：地址解析协议
ARP的基本概念

